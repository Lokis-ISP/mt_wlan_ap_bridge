#!/usr/bin/env python

mikrotik_wlan_ap_bridge_default_values = ((50, 5), (0, 0))

def inventory_mikrotik_wlan_ap_bridge(info):
    inventory = []
    for name, iftype, status, ssid, clients, freq, band, ccq in info:
        if iftype == '71' and len(ssid) > 0 and status == '1':
            inventory.append((name, mikrotik_wlan_ap_bridge_default_values))
    return inventory

def check_mikrotik_wlan_ap_bridge(item, params, info):
    # unpack thresholds
    ccqwarn, ccqcrit = params[0]
    clientswarn, clientscrit = params[1]

    for name, iftype, status, ssid, clients, freq, band, ccq in info:
        if name == item:
            perfdata = [
                ('clients', clients, clientswarn, clientscrit, 0, 30),
                ('overall-ccq', ccq, ccqwarn, ccqcrit, 0, 100),
            ]

            summary = 'Clients: %s, Overall CCQ: %s, SSID: %s, Freq: %s, Band: %s' % (
                clients, ccq, ssid, freq, band)

            if clients < clientscrit or ccq < ccqcrit:
                return (
                    2,
                    'CRITICAL - %s' % summary,
                    perfdata
                )
            elif clients < clientswarn or ccq < ccqwarn:
                return (
                    1,
                    'WARNING - %s' % summary,
                    perfdata
                )
            else:
                return (
                    0,
                    'OK - %s' % summary,
                    perfdata
                )
    return (3, 'UNKNOWN - AP not found in output')

check_info['mikrotik_wlan_ap_bridge'] = {
    'check_function':           check_mikrotik_wlan_ap_bridge,
    'inventory_function':       inventory_mikrotik_wlan_ap_bridge,
    'service_description':      'AP %s',
    'has_perfdata':             True
}

snmp_info['mikrotik_wlan_ap_bridge'] = (
    '.1.3.6.1', [
        '2.1.2.2.1.2',
        '2.1.2.2.1.3',
        '2.1.2.2.1.8',
        '4.1.14988.1.1.1.3.1.4',
        '4.1.14988.1.1.1.3.1.6',
        '4.1.14988.1.1.1.3.1.7',
        '4.1.14988.1.1.1.3.1.8',
        '4.1.14988.1.1.1.3.1.10'
    ]
)

snmp_scan_functions['mikrotik_wlan_ap_bridge'] = \
    lambda oid: oid('.1.3.6.1.4.1.14988.1.1.1.3.1.*') != None
